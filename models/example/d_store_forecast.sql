{{ config(
    materialized='table'
) }}

WITH forecast_base AS (
    SELECT
        FOR_INTERNAL_PARTY_ID AS STORE_ID,
        FOR_YEAR AS FORECAST_YEAR,
        FOR_MONTH AS FORECAST_MONTH,
        DATEFROMPARTS(FOR_YEAR, FOR_MONTH, 1) AS FORECAST_DATE,
        FOR_TARGET AS FORECAST_TARGET
    FROM {{ source('dd_dwh', 'FORECAST') }}
    WHERE FOR_END_DATE IS NULL
),

invoice_summary AS (
    SELECT
        D.STORE_ID,
        YEAR(F.INVOICE_DATE) AS INVOICE_YEAR,
        MONTH(F.INVOICE_DATE) AS INVOICE_MONTH,
        SUM(F.SUBTOTAL) AS SUBTOTAL,
        SUM(F.BALANCE_DUE) AS BALANCE_DUE
    FROM {{ ref('d_invoice') }} AS D
    INNER JOIN {{ ref('f_invoice') }} AS F
        ON F.INVOICE_ID = D.INVOICE_ID
    GROUP BY
        D.STORE_ID,
        YEAR(F.INVOICE_DATE),
        MONTH(F.INVOICE_DATE)
),

joined_data AS (
    SELECT
        F.STORE_ID,
        F.FORECAST_YEAR,
        F.FORECAST_MONTH,
        F.FORECAST_DATE,
        F.FORECAST_TARGET,
        COALESCE(I.SUBTOTAL, 0) AS SUBTOTAL,
        COALESCE(I.BALANCE_DUE, 0) AS INVOICE_BALANCE_DUE
    FROM forecast_base AS F
    LEFT JOIN invoice_summary AS I
        ON F.STORE_ID = I.STORE_ID
        AND F.FORECAST_YEAR = I.INVOICE_YEAR
        AND F.FORECAST_MONTH = I.INVOICE_MONTH
)

SELECT
    STORE_ID,
    FORECAST_YEAR,
    FORECAST_MONTH,
    FORECAST_DATE,
    FORECAST_TARGET,
    SUM(SUBTOTAL) AS SUBTOTAL,
    SUM(INVOICE_BALANCE_DUE) AS INVOICE_BALANCE_DUE
FROM joined_data
GROUP BY
    STORE_ID,
    FORECAST_YEAR,
    FORECAST_MONTH,
    FORECAST_DATE,
    FORECAST_TARGET;
